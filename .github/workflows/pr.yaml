on: pull_request
name: Review
jobs:
  test-composer-install:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: ['7.4', '8.0', '8.1']
    name: Validate composer (${{ matrix.php}})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, json, redis, tokenizer
          coverage: none
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-
      - name: Validate composer files
        run: composer validate composer.json

  coding-standards:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: ['7.4', '8.0', '8.1']
    name: PHP Coding Standards Fixer (${{ matrix.php }})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, json, redis, tokenizer
          coverage: none
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Coding standards
        run: composer coding-standards-check

  # code-analysis:
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       php: ['7.4', '8.0', '8.1']
  #   name: PHP Coding Standards Fixer (${{ matrix.php }})
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup PHP, with composer and extensions
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: ${{ matrix.php}}
  #         extensions: apcu, ctype, iconv, json, redis, tokenizer
  #         coverage: none
  #     - name: Get composer cache directory
  #       id: composer-cache
  #       run: echo "::set-output name=dir::$(composer config cache-files-dir)"
  #     - name: Cache composer dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: ${{ steps.composer-cache.outputs.dir }}
  #         key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
  #         restore-keys: ${{ matrix.php }}-composer-
  #     - name: Install Dependencies
  #       run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
  #     - name: php-cs-fixer
  #       run: composer code-analysis

  unit-tests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: ['7.4', '8.0', '8.1']
    name: Unit tests (${{ matrix.php}})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, json, redis, tokenizer
          coverage: none
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-
      - name: Install Dependencies
        run: composer install
      - name: Unit tests
        run: phpdbg -qrr ./vendor/bin/phpunit
